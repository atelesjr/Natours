.row {
    //max-width : if we have enough available space then it will have the width that we specified. so if there isn't enough space then width that we specified, then it will simply fill 100% of available space.
    max-width: $grid-width; //1140px
    margin: 0 auto;
        
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    @include clearfix;

    // ^ means all atributes that starts with "col-"
    // * selects any class that contains "col-"
    // $ any class that ends
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }


    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);   
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);   
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});

    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2* ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3* ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }

    
}

/* Another method of calculate grid.
.col-1-of-2, .col-2-of-4 {
 width: calc((100% - #{$gutter-horizontal})/2);
 }
 .col-1-of-3 {
 width: calc((100% - #{$gutter-horizontal} * 2)/3);
 }
 .col-1-of-4 {
 width: calc((100% - #{$gutter-horizontal} * 3)/4);
 }
 .col-2-of-3 {
 width: calc((200% - #{$gutter-horizontal} )/3);
 }
 .col-3-of-4 {
 width: calc((300% - #{$gutter-horizontal} )/4);
 }


*/